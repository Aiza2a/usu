{{define "public/footer"}}
<script>
    function uploadFile(file) {
        // --- 這部分的 chunking 邏輯不變 ---
        var limit = 10 * 1024 * 1024;
if (file.size <= limit) {
            // 直接返回 uploadImg Promise
            return uploadImg(file, 1); // <-- 修改：返回 Promise

        } else {
            // 文件大于10MB，需要分割成多个块
            var chunkSize = limit; 
            var start = 0;
var end = Math.min(chunkSize, file.size);
            
            // 使用 Promise 鏈來處理分塊
            return new Promise((resolveOuter, rejectOuter) => { // <-- 修改：返回 Promise
                var temp = "tgstate-blob";
temp = temp + '\n' + file.name;
                temp = temp + '\nsize' + file.size;

                function uploadNextChunk() {
                    if (start < file.size) {
                        var chunk = file.slice(start, end);
return uploadImg(chunk, 0)
                            .then((url) => {
                                temp = temp + '\n' + url.replace(/^\/d\//, ''); 

                                start = end;
                                end = Math.min(start + chunkSize, file.size);
                                return uploadNextChunk(); // 遞迴上傳下一個塊

                            })
                            // 注意：這裡的 catch 只處理當前 chunk 的 uploadImg 失敗
                            .catch((error) => { 
                                console.error("Chunk upload error:", error);

                                var t = $('<div class="response-item response-error">分塊上傳失敗(' + file.name + ')</div>');
                                $("#response").prepend(t);
                                throw new Error("Chunk upload failed for " + file.name); // <-- 修改：拋出錯誤以停止 Promise 鏈

                            });
} else {
                        // 所有分塊上傳完成 (除了 fileAll.txt)
                        return Promise.resolve(); 

                    }
                }

                uploadNextChunk()
                    .then(() => {
                        // 所有分塊成功後，上傳包含 ID 列表的 fileAll.txt
                        console.log(temp); 
                        var blob = new Blob([temp], { type: 'text/plain' });

                        var fileAll = new File([blob], 'fileAll.txt', { type: 'text/plain' });
                        // 返回最終的 uploadImg Promise
                        return uploadImg(fileAll, 1); 
                    })
                    .then(resolveOuter) // <-- 最終成功時 resolve 外層 Promise
                    .catch(rejectOuter); // <-- 任何失敗時 reject 外層 Promise
            });
}
    }

    // uploadImg 函數基本不變，只是確保返回 Promise
    function uploadImg(e, ms) {
        return new Promise((resolve, reject) => {
            var o = new FormData();
            o.append("image", e);
            var isImage = e.type.startsWith('image/');
            // --- UI 更新部分移到外面 ---
            // $("#uploadButton").prop("disabled", !0); 
            // $("#uploadButton").text("上传中");
            // $("#loading").show();
            // --- 移出結束 ---

            var a = window.location.protocol + "//" + window.location.hostname;
            "80" !== window.location.port &&
                0 < window.location.port.length &&
                (a = a + ":" + window.location.port),
                $.ajax({
                    type: "POST",
                    url: a + "/api",
                    data: o,
                    contentType: !1,
                    processData: !1,
                    success: function (e) {
                        var link = a + e.message;
                        var t;
                        if (e.code == 1) {
                            if (ms) { // 只在最後一個請求 (ms=1) 時產生完整的 HTML
                                if (isImage || e.message.endsWith('.txt')) { // 判斷是圖片或 fileAll.txt
                                    // 圖片或分塊完成的 HTML 結構
                                    t = $(
                                        '<div class="response-item response-success">' +
                                            (e.message.endsWith('.txt') ? '分塊文件' : '图片') + // 根據是否為 .txt 顯示不同文字
                                            '外链：<a target="_blank" href="' + link + '">' + link + '</a>' +
                                            '<div class="all-copy-buttons">' +
                                                '<span class="copy-code" data-clipboard-text="' + link + '">Copy</span>' + 
                                                // 只有圖片才顯示 HTML/Markdown/BBCode
                                                (isImage ? 
                                                    '<span class="copy-code" data-clipboard-text="&lt;img src=&quot;' + link + '&quot; alt=&quot;Your Alt Text&quot;&gt;">HTML</span>' +
                                                    '<span class="copy-code" data-clipboard-text="![Alt Text](' + link + ')">Markdown</span>' +
                                                    '<span class="copy-code" data-clipboard-text="[img]' + link + '[/img]">BBCode</span>' 
                                                    : '') + 
                                            '</div>' +
                                        '</div>'
                                    );
                                } else {
                                     // 普通文件（非分塊）的 HTML 結構
                                    t = $(
                                        '<div class="response-item response-success">文件外链：<a target="_blank" href="' + link + '">' + link + '</a>' +
                                        '<div class="all-copy-buttons">' +
                                            '<span class="copy-code" data-clipboard-text="' + link + '">Copy</span>' +
                                        '</div>' +
                                        '</div>'
                                    );
                                }
                                $("#response").prepend(t); // 只有 ms=1 時才插入 DOM

                                // 綁定複製按鈕事件 (移到這裡確保只綁定一次)
                                $(".copy-code").off('click').on('click', function () { // 使用 .off().on() 防止重複綁定
                                    var code = $(this).data("clipboard-text");
                                    var input = $("<input>");
                                    $("body").append(input);
                                    input.val(code).select();
                                    document.execCommand("copy");
                                    input.remove();
                                    var copyButton = $(this);
                                    var originalText = copyButton.text();
                                    copyButton.text("复制成功");
                                    setTimeout(function () {
                                        copyButton.text(originalText);
                                    }, 1000);
                                });
                            }
                            resolve(e.message); // 無論如何都 resolve message (供 chunking 使用)
                        } else {
                            // API 返回錯誤 code
                            var t = $('<div class="response-item response-error">上传失败(' + (e.message || '未知错误') + ')</div>');
                            $("#response").prepend(t); // 顯示錯誤訊息
                            reject("上传失败(" + (e.message || '未知错误') + ")"); // Reject Promise
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) { // 加入更多錯誤參數
                        // AJAX 請求本身失敗 (網路問題、後端崩潰等)
                        var errorMsg = "上传失败";
                        if (jqXHR.responseJSON && jqXHR.responseJSON.message) {
                            errorMsg += '(' + jqXHR.responseJSON.message + ')';
                        } else if (errorThrown) {
                             errorMsg += '(' + errorThrown + ')';
                        }
                        var errorResponse = $('<div class="response-item response-error">' + errorMsg + '</div>');
                        $("#response").prepend(errorResponse);
                        reject(errorMsg); // Reject Promise
                    },
                    // complete 回呼不再需要，由 Promise 的 finally 或 async/await 控制
                    // complete: function () { ... } 
                });
        });
    }

    // --- 移除 readAndUploadFile 函數 ---
    /*
    function readAndUploadFile(file) {
        var reader = new FileReader();
        reader.onload = function (e) {
            var fileContent = e.target.result;
            uploadFile(file, fileContent); // fileContent 實際未使用
        };
        reader.readAsText(file); // 對二進制文件使用 readAsText 是錯誤的
    }
    */
   // --- 移除結束 ---

    document.addEventListener("paste", function (e) {
        // --- 修改：貼上時也使用 async/await ---
        (async () => { 
            $("#uploadButton").prop("disabled", true); // 禁用按鈕
            $("#uploadButton").text("上传中");
            $("#loading").show();
            var filesToUpload = [];
            for (var o = e.clipboardData.items, t = 0; t < o.length; t++) {
                var n = o[t];
                if (n.type.indexOf("image") !== -1) {
                   filesToUpload.push(n.getAsFile());
                }
            }

            if (filesToUpload.length > 0) {
                 $("#uploadFileLabel")
                        .text("已选择剪贴板文件 ("+ filesToUpload.length +")")
                        .css("background-color", "#0056b3");
                for (const file of filesToUpload) {
                    try {
                        await uploadFile(file); // 等待上傳完成
                    } catch (error) {
                        console.error("Paste upload error for one file:", error);
                        // 即使一個文件失敗，也繼續嘗試下一個
                    }
                }
                 $("#uploadFileLabel") // 清除選擇提示
                    .text("选择文件")
                    .css("background-color", "#12507b");
            }

            $("#uploadButton").prop("disabled", false); // 啟用按鈕
            $("#uploadButton").text("上传");
            $("#loading").hide();
        })(); // 立即執行 async 函數
        // --- 修改結束 ---
    });
        
    $(document).ready(function () {
            /* --- 動態載入背景圖片 (不變) --- */
            var cacheBuster = new Date().getTime();
            var newBgUrl = 'https://www.loliapi.com/acg/?_t=' + cacheBuster;
            $('body').css('background-image', 'url(' + newBgUrl + ')');
            /* --- 新增結束 --- */


            $("#uploadFile").change(function () {
                var files = $(this)[0].files;
                if (files.length > 0) {
                    if (files.length === 1) {
                         $("#uploadFileLabel")
                            .text("已选择文件: " + files[0].name)
                            .css("background-color", "#0056b3");
                    } else {
                         $("#uploadFileLabel")
                            .text("已选择 " + files.length + " 个文件") // <-- 修改提示文字
                            .css("background-color", "#0056b3");
                    }
                } else {
                    $("#uploadFileLabel")
                        .text("选择文件")
                        .css("background-color", "#12507b");
                }
            });

            // --- 修改 uploadButton 點擊事件為 async ---
            $("#uploadButton").click(async function () { // <-- 設為 async 函數
                var input = document.getElementById("uploadFile");
                var files = input.files; // <-- 取得 FileList

                if (files.length > 0) {
                    // --- 在迴圈外禁用按鈕 ---
                    $("#uploadButton").prop("disabled", true);
                    $("#uploadButton").text("上传中 (" + files.length + ")"); // <-- 顯示總數
                    $("#loading").show();
                    // --- 禁用結束 ---

                    var successCount = 0;
                    var errorCount = 0;

                    // 使用 for...of 迴圈配合 await
                    for (const file of files) { 
                        try {
                            // 等待 uploadFile Promise 完成
                            await uploadFile(file); 
                            successCount++;
                        } catch (error) {
                            console.error("Upload error for file " + file.name + ":", error);
                            errorCount++;
                            // 錯誤訊息已由 uploadImg 或 uploadFile 內部 prepend
                        }
                        // 更新按鈕文字顯示進度 (可選)
                        $("#uploadButton").text("上传中 (" + (files.length - successCount - errorCount) + ")");
                    }

                    // --- 所有文件處理完畢後啟用按鈕 ---
                    $("#uploadButton").prop("disabled", false);
                    $("#uploadButton").text("上传");
                    $("#loading").hide();
                    $("#uploadFile").val(""); // 清空選擇的文件
                    $("#uploadFileLabel")
                        .text("选择文件")
                        .css("background-color", "#12507b");
                    // --- 啟用結束 ---
                    
                    // (可選) 顯示一個總結訊息
                    if (files.length > 1) {
                         var summaryMsg = "批量上传完成: " + successCount + " 成功, " + errorCount + " 失败。";
                         var summaryClass = errorCount > 0 ? "response-error" : "response-success";
                         var summaryDiv = $('<div class="response-item ' + summaryClass + '">' + summaryMsg + '</div>');
                         $("#response").prepend(summaryDiv);
                    }

                } else {
                    alert("请选择一个文件");
                }
            });
            // --- 修改結束 ---
    });
</script>
</body>

</html>
{{end}}